//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceMyPhotos
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Media", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Media : object
    {
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.AttributeValue> AttributesField;
        
        private bool DeletedField;
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.AttributeValue> Attributes
        {
            get
            {
                return this.AttributesField;
            }
            set
            {
                this.AttributesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted
        {
            get
            {
                return this.DeletedField;
            }
            set
            {
                this.DeletedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeValue", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class AttributeValue : object
    {
        
        private ServiceReferenceMyPhotos.Attribute AttributeField;
        
        private int AttributeIdField;
        
        private int IdField;
        
        private ServiceReferenceMyPhotos.Media MediaField;
        
        private int MediaIdField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Attribute Attribute
        {
            get
            {
                return this.AttributeField;
            }
            set
            {
                this.AttributeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttributeId
        {
            get
            {
                return this.AttributeIdField;
            }
            set
            {
                this.AttributeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.Media Media
        {
            get
            {
                return this.MediaField;
            }
            set
            {
                this.MediaField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MediaId
        {
            get
            {
                return this.MediaIdField;
            }
            set
            {
                this.MediaIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Attribute", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Attribute : object
    {
        
        private int IdField;
        
        private string NameField;
        
        private ServiceReferenceMyPhotos.AttributeType TypeField;
        
        private System.Collections.Generic.List<ServiceReferenceMyPhotos.AttributeValue> ValuesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ServiceReferenceMyPhotos.AttributeType Type
        {
            get
            {
                return this.TypeField;
            }
            set
            {
                this.TypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<ServiceReferenceMyPhotos.AttributeValue> Values
        {
            get
            {
                return this.ValuesField;
            }
            set
            {
                this.ValuesField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttributeType", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos")]
    public enum AttributeType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Number = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Person = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Location = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Path = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeStamp = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/MyPhotos", IsReference=true)]
    public partial class Person : object
    {
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        private string MiddleNameField;
        
        private string TelephoneNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                return this.MiddleNameField;
            }
            set
            {
                this.MiddleNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                return this.TelephoneNumberField;
            }
            set
            {
                this.TelephoneNumberField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceMyPhotos.IMyPhotos")]
    public interface IMyPhotos
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/AddMedia", ReplyAction="http://tempuri.org/IMedia/AddMediaResponse")]
        System.Threading.Tasks.Task<bool> AddMediaAsync(ServiceReferenceMyPhotos.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/UpdateMedia", ReplyAction="http://tempuri.org/IMedia/UpdateMediaResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Media> UpdateMediaAsync(ServiceReferenceMyPhotos.Media media);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/DeleteMedia", ReplyAction="http://tempuri.org/IMedia/DeleteMediaResponse")]
        System.Threading.Tasks.Task<int> DeleteMediaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetMediaById", ReplyAction="http://tempuri.org/IMedia/GetMediaByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Media> GetMediaByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMedia/GetAllMedia", ReplyAction="http://tempuri.org/IMedia/GetAllMediaResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Media>> GetAllMediaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttribute/AddAttribute", ReplyAction="http://tempuri.org/IAttribute/AddAttributeResponse")]
        System.Threading.Tasks.Task<bool> AddAttributeAsync(ServiceReferenceMyPhotos.Attribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttribute/UpdateAttribute", ReplyAction="http://tempuri.org/IAttribute/UpdateAttributeResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Attribute> UpdateAttributeAsync(ServiceReferenceMyPhotos.Attribute attribute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttribute/DeleteAttribute", ReplyAction="http://tempuri.org/IAttribute/DeleteAttributeResponse")]
        System.Threading.Tasks.Task<int> DeleteAttributeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttribute/GetAttributeById", ReplyAction="http://tempuri.org/IAttribute/GetAttributeByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Attribute> GetAttributeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttribute/GetAllAttributes", ReplyAction="http://tempuri.org/IAttribute/GetAllAttributesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Attribute>> GetAllAttributesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttributeValue/AddAttributeValue", ReplyAction="http://tempuri.org/IAttributeValue/AddAttributeValueResponse")]
        System.Threading.Tasks.Task<bool> AddAttributeValueAsync(ServiceReferenceMyPhotos.AttributeValue value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttributeValue/UpdateAttributeValue", ReplyAction="http://tempuri.org/IAttributeValue/UpdateAttributeValueResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.AttributeValue> UpdateAttributeValueAsync(ServiceReferenceMyPhotos.AttributeValue value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttributeValue/DeleteAttributeValue", ReplyAction="http://tempuri.org/IAttributeValue/DeleteAttributeValueResponse")]
        System.Threading.Tasks.Task<int> DeleteAttributeValueAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAttributeValue/GetAttributeValueById", ReplyAction="http://tempuri.org/IAttributeValue/GetAttributeValueByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.AttributeValue> GetAttributeValueByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/AddPerson", ReplyAction="http://tempuri.org/IPerson/AddPersonResponse")]
        System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMyPhotos.Person person);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/UpdatePerson", ReplyAction="http://tempuri.org/IPerson/UpdatePersonResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> UpdatePersonAsync(ServiceReferenceMyPhotos.Person newPerson);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/DeletePerson", ReplyAction="http://tempuri.org/IPerson/DeletePersonResponse")]
        System.Threading.Tasks.Task<int> DeletePersonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetPersonById", ReplyAction="http://tempuri.org/IPerson/GetPersonByIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPerson/GetAllPeople", ReplyAction="http://tempuri.org/IPerson/GetAllPeopleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Person>> GetAllPeopleAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IMyPhotosChannel : ServiceReferenceMyPhotos.IMyPhotos, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class MyPhotosClient : System.ServiceModel.ClientBase<ServiceReferenceMyPhotos.IMyPhotos>, ServiceReferenceMyPhotos.IMyPhotos
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public MyPhotosClient() : 
                base(MyPhotosClient.GetDefaultBinding(), MyPhotosClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.basicHTTP_MyPhotos.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), MyPhotosClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(MyPhotosClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> AddMediaAsync(ServiceReferenceMyPhotos.Media media)
        {
            return base.Channel.AddMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Media> UpdateMediaAsync(ServiceReferenceMyPhotos.Media media)
        {
            return base.Channel.UpdateMediaAsync(media);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMediaAsync(int id)
        {
            return base.Channel.DeleteMediaAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Media> GetMediaByIdAsync(int id)
        {
            return base.Channel.GetMediaByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Media>> GetAllMediaAsync()
        {
            return base.Channel.GetAllMediaAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddAttributeAsync(ServiceReferenceMyPhotos.Attribute attribute)
        {
            return base.Channel.AddAttributeAsync(attribute);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Attribute> UpdateAttributeAsync(ServiceReferenceMyPhotos.Attribute attribute)
        {
            return base.Channel.UpdateAttributeAsync(attribute);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAttributeAsync(int id)
        {
            return base.Channel.DeleteAttributeAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Attribute> GetAttributeByIdAsync(int id)
        {
            return base.Channel.GetAttributeByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Attribute>> GetAllAttributesAsync()
        {
            return base.Channel.GetAllAttributesAsync();
        }
        
        public System.Threading.Tasks.Task<bool> AddAttributeValueAsync(ServiceReferenceMyPhotos.AttributeValue value)
        {
            return base.Channel.AddAttributeValueAsync(value);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.AttributeValue> UpdateAttributeValueAsync(ServiceReferenceMyPhotos.AttributeValue value)
        {
            return base.Channel.UpdateAttributeValueAsync(value);
        }
        
        public System.Threading.Tasks.Task<int> DeleteAttributeValueAsync(int id)
        {
            return base.Channel.DeleteAttributeValueAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.AttributeValue> GetAttributeValueByIdAsync(int id)
        {
            return base.Channel.GetAttributeValueByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<bool> AddPersonAsync(ServiceReferenceMyPhotos.Person person)
        {
            return base.Channel.AddPersonAsync(person);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> UpdatePersonAsync(ServiceReferenceMyPhotos.Person newPerson)
        {
            return base.Channel.UpdatePersonAsync(newPerson);
        }
        
        public System.Threading.Tasks.Task<int> DeletePersonAsync(int id)
        {
            return base.Channel.DeletePersonAsync(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceMyPhotos.Person> GetPersonByIdAsync(int id)
        {
            return base.Channel.GetPersonByIdAsync(id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ServiceReferenceMyPhotos.Person>> GetAllPeopleAsync()
        {
            return base.Channel.GetAllPeopleAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.basicHTTP_MyPhotos))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.basicHTTP_MyPhotos))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8000/MyPhotos");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return MyPhotosClient.GetBindingForEndpoint(EndpointConfiguration.basicHTTP_MyPhotos);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return MyPhotosClient.GetEndpointAddress(EndpointConfiguration.basicHTTP_MyPhotos);
        }
        
        public enum EndpointConfiguration
        {
            
            basicHTTP_MyPhotos,
        }
    }
}
