//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotos {
  using System.Runtime.Serialization;


  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [System.Runtime.Serialization.DataContractAttribute(Name = "Media", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos", IsReference = true)]
  public partial class Media : object, System.Runtime.Serialization.IExtensibleDataObject {

    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    private MyPhotos.AttributeValue[] AttributesField;

    private bool DeletedField;

    private int IdField;

    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
      get {
        return this.extensionDataField;
      }
      set {
        this.extensionDataField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public MyPhotos.AttributeValue[] Attributes {
      get {
        return this.AttributesField;
      }
      set {
        this.AttributesField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public bool Deleted {
      get {
        return this.DeletedField;
      }
      set {
        this.DeletedField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int Id {
      get {
        return this.IdField;
      }
      set {
        this.IdField = value;
      }
    }
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [System.Runtime.Serialization.DataContractAttribute(Name = "AttributeValue", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos", IsReference = true)]
  public partial class AttributeValue : object, System.Runtime.Serialization.IExtensibleDataObject {

    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    private MyPhotos.Attribute AttributeField;

    private int AttributeIdField;

    private int IdField;

    private MyPhotos.Media MediaField;

    private int MediaIdField;

    private string ValueField;

    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
      get {
        return this.extensionDataField;
      }
      set {
        this.extensionDataField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public MyPhotos.Attribute Attribute {
      get {
        return this.AttributeField;
      }
      set {
        this.AttributeField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int AttributeId {
      get {
        return this.AttributeIdField;
      }
      set {
        this.AttributeIdField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int Id {
      get {
        return this.IdField;
      }
      set {
        this.IdField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public MyPhotos.Media Media {
      get {
        return this.MediaField;
      }
      set {
        this.MediaField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int MediaId {
      get {
        return this.MediaIdField;
      }
      set {
        this.MediaIdField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Value {
      get {
        return this.ValueField;
      }
      set {
        this.ValueField = value;
      }
    }
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [System.Runtime.Serialization.DataContractAttribute(Name = "Attribute", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos", IsReference = true)]
  public partial class Attribute : object, System.Runtime.Serialization.IExtensibleDataObject {

    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    private int IdField;

    private string NameField;

    private MyPhotos.AttributeType TypeField;

    private MyPhotos.AttributeValue[] ValuesField;

    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
      get {
        return this.extensionDataField;
      }
      set {
        this.extensionDataField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int Id {
      get {
        return this.IdField;
      }
      set {
        this.IdField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string Name {
      get {
        return this.NameField;
      }
      set {
        this.NameField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public MyPhotos.AttributeType Type {
      get {
        return this.TypeField;
      }
      set {
        this.TypeField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public MyPhotos.AttributeValue[] Values {
      get {
        return this.ValuesField;
      }
      set {
        this.ValuesField = value;
      }
    }
  }

  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [System.Runtime.Serialization.DataContractAttribute(Name = "AttributeType", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos")]
  public enum AttributeType : int {

    [System.Runtime.Serialization.EnumMemberAttribute()]
    String = 0,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    Number = 1,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    Date = 2,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    Person = 3,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    Location = 4,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    Path = 5,

    [System.Runtime.Serialization.EnumMemberAttribute()]
    TimeStamp = 6,
  }

  [System.Diagnostics.DebuggerStepThroughAttribute()]
  [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
  [System.Runtime.Serialization.DataContractAttribute(Name = "Person", Namespace = "http://schemas.datacontract.org/2004/07/MyPhotos", IsReference = true)]
  public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject {

    private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

    private string FirstNameField;

    private int IdField;

    private string LastNameField;

    private string MiddleNameField;

    private string TelephoneNumberField;

    public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
      get {
        return this.extensionDataField;
      }
      set {
        this.extensionDataField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string FirstName {
      get {
        return this.FirstNameField;
      }
      set {
        this.FirstNameField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public int Id {
      get {
        return this.IdField;
      }
      set {
        this.IdField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string LastName {
      get {
        return this.LastNameField;
      }
      set {
        this.LastNameField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string MiddleName {
      get {
        return this.MiddleNameField;
      }
      set {
        this.MiddleNameField = value;
      }
    }

    [System.Runtime.Serialization.DataMemberAttribute()]
    public string TelephoneNumber {
      get {
        return this.TelephoneNumberField;
      }
      set {
        this.TelephoneNumberField = value;
      }
    }
  }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IMyPhotos")]
public interface IMyPhotos {

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/AddMedia", ReplyAction = "http://tempuri.org/IMedia/AddMediaResponse")]
  bool AddMedia(MyPhotos.Media media);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/AddMedia", ReplyAction = "http://tempuri.org/IMedia/AddMediaResponse")]
  System.Threading.Tasks.Task<bool> AddMediaAsync(MyPhotos.Media media);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/UpdateMedia", ReplyAction = "http://tempuri.org/IMedia/UpdateMediaResponse")]
  MyPhotos.Media UpdateMedia(MyPhotos.Media media);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/UpdateMedia", ReplyAction = "http://tempuri.org/IMedia/UpdateMediaResponse")]
  System.Threading.Tasks.Task<MyPhotos.Media> UpdateMediaAsync(MyPhotos.Media media);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/DeleteMedia", ReplyAction = "http://tempuri.org/IMedia/DeleteMediaResponse")]
  int DeleteMedia(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/DeleteMedia", ReplyAction = "http://tempuri.org/IMedia/DeleteMediaResponse")]
  System.Threading.Tasks.Task<int> DeleteMediaAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/GetMediaById", ReplyAction = "http://tempuri.org/IMedia/GetMediaByIdResponse")]
  MyPhotos.Media GetMediaById(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/GetMediaById", ReplyAction = "http://tempuri.org/IMedia/GetMediaByIdResponse")]
  System.Threading.Tasks.Task<MyPhotos.Media> GetMediaByIdAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/GetAllMedia", ReplyAction = "http://tempuri.org/IMedia/GetAllMediaResponse")]
  MyPhotos.Media[] GetAllMedia();

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMedia/GetAllMedia", ReplyAction = "http://tempuri.org/IMedia/GetAllMediaResponse")]
  System.Threading.Tasks.Task<MyPhotos.Media[]> GetAllMediaAsync();

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/AddAttribute", ReplyAction = "http://tempuri.org/IAttribute/AddAttributeResponse")]
  bool AddAttribute(MyPhotos.Attribute attribute);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/AddAttribute", ReplyAction = "http://tempuri.org/IAttribute/AddAttributeResponse")]
  System.Threading.Tasks.Task<bool> AddAttributeAsync(MyPhotos.Attribute attribute);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/UpdateAttribute", ReplyAction = "http://tempuri.org/IAttribute/UpdateAttributeResponse")]
  MyPhotos.Attribute UpdateAttribute(MyPhotos.Attribute attribute);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/UpdateAttribute", ReplyAction = "http://tempuri.org/IAttribute/UpdateAttributeResponse")]
  System.Threading.Tasks.Task<MyPhotos.Attribute> UpdateAttributeAsync(MyPhotos.Attribute attribute);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/DeleteAttribute", ReplyAction = "http://tempuri.org/IAttribute/DeleteAttributeResponse")]
  int DeleteAttribute(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/DeleteAttribute", ReplyAction = "http://tempuri.org/IAttribute/DeleteAttributeResponse")]
  System.Threading.Tasks.Task<int> DeleteAttributeAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/GetAttributeById", ReplyAction = "http://tempuri.org/IAttribute/GetAttributeByIdResponse")]
  MyPhotos.Attribute GetAttributeById(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/GetAttributeById", ReplyAction = "http://tempuri.org/IAttribute/GetAttributeByIdResponse")]
  System.Threading.Tasks.Task<MyPhotos.Attribute> GetAttributeByIdAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/GetAllAttributes", ReplyAction = "http://tempuri.org/IAttribute/GetAllAttributesResponse")]
  MyPhotos.Attribute[] GetAllAttributes();

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttribute/GetAllAttributes", ReplyAction = "http://tempuri.org/IAttribute/GetAllAttributesResponse")]
  System.Threading.Tasks.Task<MyPhotos.Attribute[]> GetAllAttributesAsync();

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/AddAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/AddAttributeValueResponse")]
  bool AddAttributeValue(MyPhotos.AttributeValue value);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/AddAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/AddAttributeValueResponse")]
  System.Threading.Tasks.Task<bool> AddAttributeValueAsync(MyPhotos.AttributeValue value);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/UpdateAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/UpdateAttributeValueResponse")]
  MyPhotos.AttributeValue UpdateAttributeValue(MyPhotos.AttributeValue value);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/UpdateAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/UpdateAttributeValueResponse")]
  System.Threading.Tasks.Task<MyPhotos.AttributeValue> UpdateAttributeValueAsync(MyPhotos.AttributeValue value);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/DeleteAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/DeleteAttributeValueResponse")]
  int DeleteAttributeValue(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/DeleteAttributeValue", ReplyAction = "http://tempuri.org/IAttributeValue/DeleteAttributeValueResponse")]
  System.Threading.Tasks.Task<int> DeleteAttributeValueAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/GetAttributeValueById", ReplyAction = "http://tempuri.org/IAttributeValue/GetAttributeValueByIdResponse")]
  MyPhotos.AttributeValue GetAttributeValueById(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IAttributeValue/GetAttributeValueById", ReplyAction = "http://tempuri.org/IAttributeValue/GetAttributeValueByIdResponse")]
  System.Threading.Tasks.Task<MyPhotos.AttributeValue> GetAttributeValueByIdAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/AddPerson", ReplyAction = "http://tempuri.org/IPerson/AddPersonResponse")]
  bool AddPerson(MyPhotos.Person person);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/AddPerson", ReplyAction = "http://tempuri.org/IPerson/AddPersonResponse")]
  System.Threading.Tasks.Task<bool> AddPersonAsync(MyPhotos.Person person);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/UpdatePerson", ReplyAction = "http://tempuri.org/IPerson/UpdatePersonResponse")]
  MyPhotos.Person UpdatePerson(MyPhotos.Person newPerson);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/UpdatePerson", ReplyAction = "http://tempuri.org/IPerson/UpdatePersonResponse")]
  System.Threading.Tasks.Task<MyPhotos.Person> UpdatePersonAsync(MyPhotos.Person newPerson);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/DeletePerson", ReplyAction = "http://tempuri.org/IPerson/DeletePersonResponse")]
  int DeletePerson(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/DeletePerson", ReplyAction = "http://tempuri.org/IPerson/DeletePersonResponse")]
  System.Threading.Tasks.Task<int> DeletePersonAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/GetPersonById", ReplyAction = "http://tempuri.org/IPerson/GetPersonByIdResponse")]
  MyPhotos.Person GetPersonById(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/GetPersonById", ReplyAction = "http://tempuri.org/IPerson/GetPersonByIdResponse")]
  System.Threading.Tasks.Task<MyPhotos.Person> GetPersonByIdAsync(int id);

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/GetAllPeople", ReplyAction = "http://tempuri.org/IPerson/GetAllPeopleResponse")]
  MyPhotos.Person[] GetAllPeople();

  [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IPerson/GetAllPeople", ReplyAction = "http://tempuri.org/IPerson/GetAllPeopleResponse")]
  System.Threading.Tasks.Task<MyPhotos.Person[]> GetAllPeopleAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IMyPhotosChannel : IMyPhotos, System.ServiceModel.IClientChannel {
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class MyPhotosClient : System.ServiceModel.ClientBase<IMyPhotos>, IMyPhotos {

  public MyPhotosClient() {
  }

  public MyPhotosClient(string endpointConfigurationName) :
          base(endpointConfigurationName) {
  }

  public MyPhotosClient(string endpointConfigurationName, string remoteAddress) :
          base(endpointConfigurationName, remoteAddress) {
  }

  public MyPhotosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
          base(endpointConfigurationName, remoteAddress) {
  }

  public MyPhotosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
          base(binding, remoteAddress) {
  }

  public bool AddMedia(MyPhotos.Media media) {
    return base.Channel.AddMedia(media);
  }

  public System.Threading.Tasks.Task<bool> AddMediaAsync(MyPhotos.Media media) {
    return base.Channel.AddMediaAsync(media);
  }

  public MyPhotos.Media UpdateMedia(MyPhotos.Media media) {
    return base.Channel.UpdateMedia(media);
  }

  public System.Threading.Tasks.Task<MyPhotos.Media> UpdateMediaAsync(MyPhotos.Media media) {
    return base.Channel.UpdateMediaAsync(media);
  }

  public int DeleteMedia(int id) {
    return base.Channel.DeleteMedia(id);
  }

  public System.Threading.Tasks.Task<int> DeleteMediaAsync(int id) {
    return base.Channel.DeleteMediaAsync(id);
  }

  public MyPhotos.Media GetMediaById(int id) {
    return base.Channel.GetMediaById(id);
  }

  public System.Threading.Tasks.Task<MyPhotos.Media> GetMediaByIdAsync(int id) {
    return base.Channel.GetMediaByIdAsync(id);
  }

  public MyPhotos.Media[] GetAllMedia() {
    return base.Channel.GetAllMedia();
  }

  public System.Threading.Tasks.Task<MyPhotos.Media[]> GetAllMediaAsync() {
    return base.Channel.GetAllMediaAsync();
  }

  public bool AddAttribute(MyPhotos.Attribute attribute) {
    return base.Channel.AddAttribute(attribute);
  }

  public System.Threading.Tasks.Task<bool> AddAttributeAsync(MyPhotos.Attribute attribute) {
    return base.Channel.AddAttributeAsync(attribute);
  }

  public MyPhotos.Attribute UpdateAttribute(MyPhotos.Attribute attribute) {
    return base.Channel.UpdateAttribute(attribute);
  }

  public System.Threading.Tasks.Task<MyPhotos.Attribute> UpdateAttributeAsync(MyPhotos.Attribute attribute) {
    return base.Channel.UpdateAttributeAsync(attribute);
  }

  public int DeleteAttribute(int id) {
    return base.Channel.DeleteAttribute(id);
  }

  public System.Threading.Tasks.Task<int> DeleteAttributeAsync(int id) {
    return base.Channel.DeleteAttributeAsync(id);
  }

  public MyPhotos.Attribute GetAttributeById(int id) {
    return base.Channel.GetAttributeById(id);
  }

  public System.Threading.Tasks.Task<MyPhotos.Attribute> GetAttributeByIdAsync(int id) {
    return base.Channel.GetAttributeByIdAsync(id);
  }

  public MyPhotos.Attribute[] GetAllAttributes() {
    return base.Channel.GetAllAttributes();
  }

  public System.Threading.Tasks.Task<MyPhotos.Attribute[]> GetAllAttributesAsync() {
    return base.Channel.GetAllAttributesAsync();
  }

  public bool AddAttributeValue(MyPhotos.AttributeValue value) {
    return base.Channel.AddAttributeValue(value);
  }

  public System.Threading.Tasks.Task<bool> AddAttributeValueAsync(MyPhotos.AttributeValue value) {
    return base.Channel.AddAttributeValueAsync(value);
  }

  public MyPhotos.AttributeValue UpdateAttributeValue(MyPhotos.AttributeValue value) {
    return base.Channel.UpdateAttributeValue(value);
  }

  public System.Threading.Tasks.Task<MyPhotos.AttributeValue> UpdateAttributeValueAsync(MyPhotos.AttributeValue value) {
    return base.Channel.UpdateAttributeValueAsync(value);
  }

  public int DeleteAttributeValue(int id) {
    return base.Channel.DeleteAttributeValue(id);
  }

  public System.Threading.Tasks.Task<int> DeleteAttributeValueAsync(int id) {
    return base.Channel.DeleteAttributeValueAsync(id);
  }

  public MyPhotos.AttributeValue GetAttributeValueById(int id) {
    return base.Channel.GetAttributeValueById(id);
  }

  public System.Threading.Tasks.Task<MyPhotos.AttributeValue> GetAttributeValueByIdAsync(int id) {
    return base.Channel.GetAttributeValueByIdAsync(id);
  }

  public bool AddPerson(MyPhotos.Person person) {
    return base.Channel.AddPerson(person);
  }

  public System.Threading.Tasks.Task<bool> AddPersonAsync(MyPhotos.Person person) {
    return base.Channel.AddPersonAsync(person);
  }

  public MyPhotos.Person UpdatePerson(MyPhotos.Person newPerson) {
    return base.Channel.UpdatePerson(newPerson);
  }

  public System.Threading.Tasks.Task<MyPhotos.Person> UpdatePersonAsync(MyPhotos.Person newPerson) {
    return base.Channel.UpdatePersonAsync(newPerson);
  }

  public int DeletePerson(int id) {
    return base.Channel.DeletePerson(id);
  }

  public System.Threading.Tasks.Task<int> DeletePersonAsync(int id) {
    return base.Channel.DeletePersonAsync(id);
  }

  public MyPhotos.Person GetPersonById(int id) {
    return base.Channel.GetPersonById(id);
  }

  public System.Threading.Tasks.Task<MyPhotos.Person> GetPersonByIdAsync(int id) {
    return base.Channel.GetPersonByIdAsync(id);
  }

  public MyPhotos.Person[] GetAllPeople() {
    return base.Channel.GetAllPeople();
  }

  public System.Threading.Tasks.Task<MyPhotos.Person[]> GetAllPeopleAsync() {
    return base.Channel.GetAllPeopleAsync();
  }
}
